#!/bin/sh
# Git remote helper for git-secure-export, see gitremote-helpers(7).

if [ ! -e "$GIT_DIR/git-secure-key" ]; then
	cat 1>&2 <<-EOF
		*
		* The symmetric key, needed for decrypting the repository, does
		* not exist yet. If you are creating a new repository this key
		* must be created explicitly using git-secure-init.
		*
		* If you are attempting to clone an existing repository and have
		* access to the utilized symmetric key perform the following steps:
		*
		*  1. Manually initialize the repository using git-init(1).
		*  2. Copy the symmetric key to the .git/ directory.
		*  3. Add the secure:// remote manually and pull/fetch.
		*
EOF
	exit 1
fi

# From gitremote-helpers(7):
#  The second argument specifies a URL; it is usually of the form
#  <transport>://<address>, but any arbitrary string is possible.
URL="$2"

get_host() {
	echo "$URL" | sed 's|^..*://\(..*\):.*|\1|'
}

get_path() {
	echo "$URL" | sed 's|^..*://..*:\(.*\)|\1|'
}

# git-secure-import only encrypts data as specified in the INPUT
# FORMAT section of git-fast-import(1). Similarly, git-secure-import
# only decrypt data matching this format. All other data is simply
# copied from standard input to standard output.
git-secure-export | \
	ssh "$(get_host)" "git-secure-receive $(get_path)" | \
	git-secure-import
